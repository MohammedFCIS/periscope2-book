# Features Association Analyzer

In [Chapter -@sec-fam] *Feature Analyzer Module (FAM)* has been developed to identify data features and analyze each feature statistically and visually. So, the logical next step is to analyze the relationship among data features and how they are affecting each other. For example, it would be beneficial to know if a new drug effect is associated with patients age or that a certain gender is interested in a specific study subject, etc. Hence the need to *Features Association Analyzer (FAA)* module to analyze the association between two or more features statistically and visually.

## Introduction

### Function

FAA function is to analyze the association between two or more of data features. The analysis will be determined based on the selected features type and count as follow:

-   Categorical vs Categorical features(@sec-allcat),
-   Categorical vs Numerical features(@sec-catnum),
-   Numerical vs Numerical features (@sec-allnum)

### Input

FAM module has two input types:

-   Data input: that will be any `R` data.frame object
-   Configurations input: that is list of configuration parameters that are needed for each FAM function
    -   These parameters will be defined through the journey of building module different functions

Check @fig-2_1 for FAM module objective and IO summary

```{mermaid}
%%| fig-cap: "Feature Analyzer Module (FAM) Objective and IO"
%%| fig-width: 3 
%%| label: fig-2_1
flowchart TD
  A[R data.frame] --> C>"Feature Analyzer Module
  - Identify feature type
  - Calculate feature statistical summary
  - Visualize feature data"]
  B[Configurations input] --> C
  C --> D["- Data Summary
  - Data Features type, 
    properties and statistical summary
  - Data Features plots"]
```


### Output

Defining module output is essential part to identify module functions and input. FAM module output will be a report that displays:

-   Data summary (features count and observations count)
-   Data features info:
    -   Features type, properties and statistical summary
    -   Features visualization

Discussing each function output or UI design will be part of each function building steps

*TODO: Refer to app state at this point (GH PR)*

## Categorical vs Categorical features {#sec-allcat}

## Categorical vs Numerical features {#sec-catnum}

## Numerical vs Numerical features {#sec-allnum}

## Exercises

1. **FAM** used both `data.frame` and `tibbles` as a module input. However, `R` has many other data types for storing data (i.e matrix, tables, ...). Please modify **FAM** input to accept additional data type. What needs to be changed? how that will affect other **FAM** functions?

2.  In this chapter, we only discussed and implemented **arithmetic mean**. However, there are other statistical mean functions that can be implemented to enrich your FAM module as [Geometric mean](https://en.wikipedia.org/wiki/Geometric_mean), [Arithmetic--geometric mean](https://en.wikipedia.org/wiki/Arithmetic%E2%80%93geometric_mean) or [Cubic mean](https://en.wikipedia.org/wiki/Cubic_mean). Pick one and implement one of them

3. Define configuration input parameters needed to perform (@sec-cfss) and (@sec-visualization) functions and suggest proper default values.

4.  Using `periscope2` app that is created in chapter 1, implement your own version of **Feature Analyzer** module, then compare your solution against implemented solution in book site.

5.  Integrate `?periscope2::downloadFile` module to your module implementation in order to download all feature statistical summary in one file.



